 Command Design Pattern is used to encapsulate a request as an object (i.e., a command) and pass it to an invoker,
 wherein the invoker does not know how to serve the request but uses the encapsulated command to perform an action.

Actors:
1. Receiver  --> Television.cs, Fan.cs
2. Command  --> ICommand.cs.cs
3. ConcreteCommand --> TurnOnTV.cs,TurnOffTV.cs, IncreaseTvVolume.cs, DecreaseTvVolume.cs,
					TurnOnFan.cs,TurnOffFan.cs,IncreaseFanSpeed.cs, DecreaseFanSpeed.cs
4. Invoker --> RemoteControl.cs
5. Client  --> Program.cs

Advantages of Command Design Pattern:
Separation of Concerns: Decouples the object that invokes the operation from the object that knows how to perform it.
Extension: New commands can be added without changing existing code.
Composite Commands: You can compose multiple commands into a single command.
Undo/Redo Operations: You can keep a history of commands and implement undo or redo functionality.